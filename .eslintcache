[{"C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\index.js":"1","C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\App.js":"2","C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\components\\Ventas.jsx":"3","C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\components\\Chart.jsx":"4"},{"size":219,"mtime":1611097233935,"results":"5","hashOfConfig":"6"},{"size":358,"mtime":1611339156287,"results":"7","hashOfConfig":"6"},{"size":8288,"mtime":1611252917741,"results":"8","hashOfConfig":"6"},{"size":1973,"mtime":1611242202776,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1el4n37",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\index.js",[],["21","22"],"C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\App.js",[],"C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\components\\Ventas.jsx",["23","24","25"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Chart from \"./Chart\";\r\n\r\nfunction Ventas() {\r\n  var today = new Date();\r\n  var dd = String(today.getDate()).padStart(2, \"0\");\r\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n  var yyyy = today.getFullYear();\r\n\r\n  today = yyyy + \"-\" + mm + \"-\" + dd;\r\n  console.log(today);\r\n\r\n  let hoy = new Date();\r\n  const [datos, setDatos] = useState([]);\r\n  const [promedio, setPromedio] = useState(\"\");\r\n  // const [date, setDate] = useState(hoy.toISOString().slice(0, 10));\r\n  const [date, setDate] = useState(today);\r\n  const [promedioAcum, setPromedioAcum] = useState(\"\");\r\n  const [filtro, setFiltro] = useState(0);\r\n  const [sumatoria, setSumatoria] = useState(0);\r\n\r\n  // console.log(hoy);\r\n\r\n  useEffect(() => {\r\n    readWsAcumluado();\r\n  }, [date]);\r\n\r\n  const onChangeDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const readWsAcumluado = async () => {\r\n    const username = \"ADMINGLOBAL\";\r\n    const password = \"fVl4j9CNddUK+EKLpZ/vOc59Sj8FPQ+JxtVcmn0EGPU=\";\r\n    const token = Buffer.from(`${username}:${password}`, \"utf8\").toString(\r\n      \"base64\"\r\n    );\r\n\r\n    if (date !== \"\") {\r\n      let f = date.slice(8, 10);\r\n      const fecha = new Date(date);\r\n      let dias = parseInt(f - 1);\r\n      let restaDias = 1000 * 60 * 60 * 24 * dias;\r\n      let resta = fecha.getTime() - restaDias;\r\n      let fechaIni = new Date(resta);\r\n\r\n      // console.log({\"dias de corte\": dias, \"fecha: \": fechaIni.toISOString().slice(0, 10), \"fecha fin:\": date });\r\n\r\n      setFiltro(\r\n        `?$filter=Posting_Date gt ${fechaIni\r\n          .toISOString()\r\n          .slice(0, 10)} and Posting_Date lt ${date}`\r\n      );\r\n    } else {\r\n      setFiltro(`?$filter=Posting_Date eq ${date}`);\r\n    }\r\n\r\n    const url =\r\n      \"https://api.businesscentral.dynamics.com/v2.0/0acf03fd-2058-4005-bc16-b2184931a7bc/Production/ODataV4/Company('COMERCIALIZADORA%20DE%20COMBUSTIBL')/Query_Ventas\" +\r\n      filtro;\r\n    // const data = {};\r\n\r\n    const respuesta = await axios.get(url, {\r\n      headers: {\r\n        Authorization: `Basic ${token}`,\r\n      },\r\n    });\r\n\r\n    let suma = 0;\r\n    let sumaAcum = 0;\r\n\r\n    let pd = respuesta.data.value.filter((e) => e.Posting_Date === date);\r\n\r\n    const res = respuesta.data.value;\r\n    setDatos(res);\r\n\r\n    for (let i = 0; i < pd.length; i++) {\r\n      pd[i].PrecioDiario = res[i].Sales_Amount__Actual_ / pd[i].Quantity;\r\n      sumaAcum += pd[i].Sales_Amount__Actual_ / pd[i].Quantity;\r\n    }\r\n\r\n    for (let i = 0; i < res.length; i++) {\r\n      res[i].Precio = res[i].Sales_Amount__Actual_ / res[i].Quantity;\r\n      suma += res[i].Sales_Amount__Actual_ / res[i].Quantity;\r\n    }\r\n\r\n    // console.log(datos);\r\n\r\n    setPromedio(suma / res.length);\r\n    setPromedioAcum(sumaAcum / pd.length);\r\n    setSumatoria(suma);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div className=\"col-md-6\">\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control mt-4 mb-4\"\r\n          placeholder=\"Fecha ejemplo: 2020-12-01\"\r\n          value={date}\r\n          onChange={onChangeDate}\r\n        />\r\n      </div>\r\n      {datos.length > 0 ? (\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\"></div>\r\n            <div className=\"col-md-3\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  width: \"20rem\",\r\n                  height: \"6rem\",\r\n                  backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n                  color: \"black\",\r\n                  border: \"1px solid\",\r\n                  borderColor: \"rgba(255, 99, 132, 1)\",\r\n                  font: \"-webkit-small-control\",\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  <b>Promedio precio de venta acumulado:</b>\r\n                  <h3>\r\n                    {\" \"}\r\n                    <b>$ {Math.abs(promedio).toFixed(2)}</b>\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  width: \"20rem\",\r\n                  border: \"1px solid\",\r\n                  borderColor: \"rgba(255, 99, 132, 1)\",\r\n                  height: \"6rem\",\r\n                  color: \"black\",\r\n                  backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n                  font: \"-webkit-small-control\",\r\n                }}\r\n              >\r\n                <div className=\"card-body\">\r\n                  {!promedioAcum ? (\r\n                    <div>\r\n                      <b>Promedio precio de venta al dia: {date}</b>\r\n                      <h3>\r\n                        {\" \"}\r\n                        <b> $ 0.00</b>\r\n                      </h3>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <b>Promedio precio de venta al dia: {date}</b>\r\n                      <h3>\r\n                        {\" \"}\r\n                        <b>$ {Math.abs(promedioAcum).toFixed(2)}</b>\r\n                      </h3>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n          </div>\r\n          <div className=\"col-md-12 mt-4\">\r\n            <Chart datos={datos} />\r\n            {/* <Radar /> */}\r\n          </div>\r\n          <div className=\"col-md-12\">\r\n            <table\r\n              style={{\r\n                borderCollapse: \"collapse\",\r\n                borderSpacing: 0,\r\n                width: \"100%\",\r\n                fontFamily: \"Helvetica\",\r\n                fontSize: \"15px\",\r\n                whiteSpace: \"nowrap\",\r\n                color: \"white\",\r\n              }}\r\n              className=\"table responsive\"\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Fecha</th>\r\n                  <th scope=\"col\">No</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Tipo</th>\r\n                  <th scope=\"col\">Importe de venta</th>\r\n                  <th scope=\"col\">Precio de venta</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {datos.map((d) => (\r\n                  <tr key={d.AuxiliaryIndex1}>\r\n                    <td>{d.Posting_Date}</td>\r\n                    <td>{d.Document_No_}</td>\r\n                    <td>{Math.abs(d.Quantity)}</td>\r\n                    <td>{d.Entry_Type}</td>\r\n                    <td>{d.Sales_Amount__Actual_}</td>\r\n                    <td>\r\n                      {Math.abs(d.Sales_Amount__Actual_ / d.Quantity).toFixed(\r\n                        2\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h1>No se han encontrado datos</h1>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ventas;\r\n\r\n// const readWSDia = async () => {\r\n//   const username = \"ADMINGLOBAL\";\r\n//   const password = \"fVl4j9CNddUK+EKLpZ/vOc59Sj8FPQ+JxtVcmn0EGPU=\";\r\n//   const token = Buffer.from(`${username}:${password}`, \"utf8\").toString(\r\n//     \"base64\"\r\n//   );\r\n\r\n//   const filtro = `?$filter=Posting_Date eq ${date}`;\r\n//   // const filtro = \"\";\r\n\r\n//   const url =\r\n//     \"https://api.businesscentral.dynamics.com/v2.0/0acf03fd-2058-4005-bc16-b2184931a7bc/Production/ODataV4/Company('COMERCIALIZADORA%20DE%20COMBUSTIBL')/Query_Ventas\" +\r\n//     filtro;\r\n//   // const data = {};\r\n\r\n//   const respuesta = await axios.get(url, {\r\n//     headers: {\r\n//       Authorization: `Basic ${token}`,\r\n//     },\r\n//   });\r\n\r\n//   setDatos(respuesta.data.value);\r\n\r\n//   // console.log(respuesta.data.value);\r\n\r\n//   let suma = 0;\r\n\r\n//   for (let i = 0; i < respuesta.data.value.length; i++) {\r\n//     respuesta.data.value[i].Precio =\r\n//       respuesta.data.value[i].Sales_Amount__Actual_ /\r\n//       respuesta.data.value[i].Quantity;\r\n//     suma +=\r\n//       respuesta.data.value[i].Sales_Amount__Actual_ /\r\n//       respuesta.data.value[i].Quantity;\r\n//   }\r\n\r\n//   setPromedio(suma / respuesta.data.value.length);\r\n//   setSumatoria(suma);\r\n// };\r\n","C:\\Users\\ochoa\\Desktop\\ventas\\reporte_ventas_bc\\src\\components\\Chart.jsx",["26","27"],"import React from \"react\";\r\nimport { Bar } from \"@reactchartjs/react-chart.js\";\r\n\r\nfunction Chart({ datos }) {\r\n  // console.log(datos);\r\n\r\n  //daviiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiis heeeeeeeeeeeeelppp\r\n  let jmancof = [];\r\n\r\n  datos.map((v, ix) => {\r\n    if (v.Precio) {\r\n      let mc = jmancof.filter((f) => {\r\n        if (f.Posting_Date) return f.Posting_Date === v.Posting_Date;\r\n        else return false;\r\n      });\r\n\r\n      if (mc.length <= 0)\r\n        jmancof.push({ Posting_Date: v.Posting_Date, Precio: v.Precio });\r\n      else{\r\n        \r\n\r\n        let jm = datos.filter((m) => {\r\n          return m.Posting_Date === v.Posting_Date;\r\n        });\r\n\r\n        jmancof.filter((m) => {\r\n          return m.Posting_Date === v.Posting_Date;\r\n        }).map((m) => {\r\n          m.Precio += v.Precio;\r\n          m.Promedio = m.Precio / jm.length;\r\n        });\r\n\r\n      }\r\n        \r\n\r\n      // if (mc.length <= 0)\r\n      //   jmancof.push({ fecha: v.Posting_Date, precio: v.Precio });\r\n      // else\r\n      //   jmancof[ix].precio += v.Precio;\r\n    }\r\n  });\r\n  // console.log(jmancof);\r\n\r\n  const data = {\r\n    labels: jmancof.map((e) => e.Posting_Date),\r\n    datasets: [\r\n      {\r\n        label: \"Precio dia\",\r\n        data: jmancof.map((e) => Math.abs(e.Promedio).toFixed(2)),\r\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\r\n        borderColor: \"rgba(255, 99, 132, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {datos.length > 0 ? (\r\n        <div>\r\n          <div className=\"header\">\r\n            <h1 className=\"title\">Promedio de precios de venta por dia</h1>\r\n            <div className=\"links\"></div>\r\n          </div>\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":14,"column":7,"nodeType":"34","messageId":"35","endLine":14,"endColumn":10},{"ruleId":"32","severity":1,"message":"36","line":21,"column":10,"nodeType":"34","messageId":"35","endLine":21,"endColumn":19},{"ruleId":"37","severity":1,"message":"38","line":27,"column":6,"nodeType":"39","endLine":27,"endColumn":12,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":10,"column":21,"nodeType":"43","messageId":"44","endLine":10,"endColumn":23},{"ruleId":"41","severity":1,"message":"42","line":28,"column":20,"nodeType":"43","messageId":"44","endLine":28,"endColumn":22},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'hoy' is assigned a value but never used.","Identifier","unusedVar","'sumatoria' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'readWsAcumluado'. Either include it or remove the dependency array.","ArrayExpression",["47"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [date, readWsAcumluado]",{"range":"50","text":"51"},[853,859],"[date, readWsAcumluado]"]